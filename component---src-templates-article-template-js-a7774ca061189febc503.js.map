{"version":3,"sources":["webpack:///./src/templates/articleTemplate.js","webpack:///./src/components/NavButton/navButton.js","webpack:///./src/components/NavBar/navBar.js","webpack:///./src/components/Header/header.js","webpack:///./src/components/Layout/layout.js","webpack:///./src/types/tabTypes.js"],"names":["Template","html","data","markdownRemark","curTab","TabTypes","THOUGHTS","style","display","justifyContent","id","dangerouslySetInnerHTML","__html","pageQuery","NavButton","props","classes","tabType","to","className","text","NavBar","ABOUT","GAMES","require","Header","dec","createDecoration","fullTitle","siteTitle","reverseString","marginBottom","margin","maxWidth","padding","textAlign","fontFamily","fontWeight","symbols","i","charAt","Math","floor","random","length","str","reversedAry","split","reverse","char","bracketMap","hasOwnProperty","join","defaultProps","Layout","site","siteMetadata","title","children"],"mappings":"oHAAA,oJAOe,SAASA,EAAT,GAEX,IAEMC,EAFP,EADDC,KAEQC,eACAF,KACR,OACE,kBAAC,IAAD,CAAQG,OAAQC,IAASC,UACvB,yBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,WAC1C,yBACIC,GAAG,eACHC,wBAAyB,CAAEC,OAAQX,OAO1C,IAAMY,EAAS,a,+FCJPC,G,UAhBG,SAACC,GACf,IAAIC,EAAU,qBAKd,OAJID,EAAME,UAAYF,EAAMX,SACxBY,GAAW,WAIX,kBAAC,OAAD,CACIE,GAAIH,EAAMG,GACVC,UAAWH,GAEVD,EAAMK,Q,YCiBJC,G,UA1BA,SAACN,GAEZ,OACI,yBAAKL,GAAG,UACJ,kBAAC,EAAD,CACIN,OAAQW,EAAMX,OACda,QAASZ,IAASiB,MAClBJ,GAAG,IACHE,KAAK,aAET,kBAAC,EAAD,CACIhB,OAAQW,EAAMX,OACda,QAASZ,IAASkB,MAClBH,KAAK,kBACLF,GAAG,gBAEP,kBAAC,EAAD,CACId,OAAQW,EAAMX,OACda,QAASZ,IAASC,SAClBc,KAAK,cACLF,GAAG,sBCrBnBM,EAAQ,QAER,IAAMC,EAAS,SAACV,GACd,IAAMW,EAAMC,IACNC,EAAeF,EAAN,IAAaX,EAAMc,UAAnB,IAAgCC,EAAcJ,GAE7D,OACE,4BACEnB,MAAO,CACLwB,aAAa,YAGjB,yBACExB,MAAO,CACLyB,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGR,wBAAI3B,MAAO,CAAEyB,OAAQ,EAAGG,UAAW,SAAUC,WAAY,UAAWC,WAAY,MAC3ET,GAEL,kBAAC,EAAD,CAAQxB,OAAQW,EAAMX,YAMxBuB,EAAmB,WAGvB,IAFA,IAAMW,EAAU,+BACZZ,EAAM,GACDa,EAAI,EAAGA,EAAI,EAAGA,IACrBb,GAAOY,EAAQE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,SAG3D,OAAOlB,GAGHI,EAAgB,SAAAe,GAEpB,IADA,IAAIC,EAAcD,EAAIE,MAAM,IAAIC,UACvBT,EAAI,EAAGA,EAAIO,EAAYF,OAAQL,IAAK,CAC3C,IAAMU,EAAOH,EAAYP,GACrBW,EAAWC,eAAeF,KAC5BH,EAAYP,GAAKW,EAAWD,IAIhC,OAAOH,EAAYM,KAAK,KAGpBF,EAAa,CACjB,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KAOPzB,EAAO4B,aAAe,CACpBxB,UAAU,IAGGJ,Q,UC1BA6B,IAlCA,SAACvC,GACd,IAAMb,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CACE2B,UAAW3B,EAAKqD,KAAKC,aAAaC,MAClCrD,OAAQW,EAAMX,SAEhB,yBACEG,MAAO,CACLyB,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGTnB,EAAM2C,a,+NChCArD,IANE,CACbiB,MAAO,EACPC,MAAO,EACPjB,SAAU","file":"component---src-templates-article-template-js-a7774ca061189febc503.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout/layout\"\nimport TabTypes from \"../types/tabTypes\"\nimport \"./articleTemplate.css\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const { html } = markdownRemark\n  return (\n    <Layout curTab={TabTypes.THOUGHTS}>\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\n          <div\n              id=\"articlePanel\"\n              dangerouslySetInnerHTML={{ __html: html }}\n          />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./navButton.css\"\n\nconst NavButton = (props) => {\n    let classes = \"navButton hvr-skew\";\n    if (props.tabType === props.curTab) {\n        classes += \" active\"\n    }\n    \n    return (\n        <Link\n            to={props.to}\n            className={classes}\n        >\n            {props.text}\n        </Link>\n    )\n}\n\nexport default NavButton","import React from \"react\"\nimport NavButton from \"../NavButton/navButton\"\nimport TabTypes from \"../../types/tabTypes\"\n\nimport \"./navBar.css\"\n\nconst NavBar = (props) => {\n\n    return (\n        <div id=\"navBar\">\n            <NavButton\n                curTab={props.curTab}\n                tabType={TabTypes.ABOUT}\n                to=\"/\"\n                text=\"about me\"\n            />\n            <NavButton\n                curTab={props.curTab}\n                tabType={TabTypes.GAMES}\n                text=\"games portfolio\"\n                to=\"/gamesPage/\"\n            />\n            <NavButton\n                curTab={props.curTab}\n                tabType={TabTypes.THOUGHTS}\n                text=\"my thoughts\"\n                to=\"/thoughtsPage/\"\n            />\n        </div>\n    )\n}\n\nexport default NavBar","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport NavBar from \"../NavBar/navBar\"\n\nrequire(\"typeface-raleway\")\n\nconst Header = (props) => {\n  const dec = createDecoration()\n  const fullTitle = `${dec} ${props.siteTitle} ${reverseString(dec)}`\n\n  return (\n    <header\n      style={{\n        marginBottom: `1.45rem`,\n      }}\n    >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n        <h1 style={{ margin: 0, textAlign: \"center\", fontFamily: \"Raleway\", fontWeight: 300 }}>\n            {fullTitle}\n        </h1>\n        <NavBar curTab={props.curTab} />\n      </div>\n    </header>\n  )\n}\n\nconst createDecoration = () => {\n  const symbols = \"!#$%^&*()_+~-=[]|{}[];:<>?,.\"\n  let dec = \"\"\n  for (let i = 0; i < 4; i++) {\n    dec += symbols.charAt(Math.floor(Math.random() * symbols.length))\n  }\n  \n  return dec\n}\n\nconst reverseString = str => {\n  let reversedAry = str.split(\"\").reverse()\n  for (let i = 0; i < reversedAry.length; i++) {\n    const char = reversedAry[i]\n    if (bracketMap.hasOwnProperty(char)) {\n      reversedAry[i] = bracketMap[char]\n    }\n  }\n\n  return reversedAry.join(\"\");\n}\n\nconst bracketMap = {\n  '{': '}',\n  '[': ']',\n  '(': ')',\n  '<': '>',\n  '}': '{',\n  ']': '[',\n  ')': '(',\n  '>': '<'\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../Header/header\"\nimport \"./layout.css\"\n\nconst Layout = (props) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header\n        siteTitle={data.site.siteMetadata.title}\n        curTab={props.curTab}\n      />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const TabTypes = {\n    ABOUT: 1,\n    GAMES: 2,\n    THOUGHTS: 3\n}\n\nexport default TabTypes"],"sourceRoot":""}